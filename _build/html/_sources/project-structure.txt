Default Project Setup
=======================
Each new project starts out with the same structure, and base apps installed. In the next section we'll actually create a new project, but first a description of how the project is laid out and what is included.

Project Structure
------------------
Each project starts with the same default file structure. For this example assume the project is a project for making thumbnails called thumbnailer. Later sections will explain the contents of the below folders in more detail.

* ~/projects/\ **thumb_proj** - This is the top level folder all the files pertaining to this project will be kept within this folder. This folder is not kept in git for version control. Any items for the project that won't be kept in version control should be put in this directory, generally this means anything that is auto generated from the code such as the generated documentation, or build files.
    * **thumbnailer**\ / - This is the primary project folder where all the code and configuration files are kept. This folder and all it's files and subfolders (unless specifically excluded/ignored from git) are kept in version control.
        * **project**\ / - This is the django project folder. It holds the settings files, media, and project templates.
        * **apps**\ / - This folder will hold any django apps or python modules used for the project that aren't installed by using pip. These will often be apps specific to this project so they don't have setup.py files and aren't meant to be reusable.
            * **utils**\ / - Holds various one off items and helpers for the project that aren't big enough to be their own apps or modules.
        * **config**\ / - Holds various config files for things like Apache, nginx, wsgi.
        * **deploy**\ / - This folder holds the fabric file and requirements files along with any other items used in the deployment process.
    * **docs**\ / - This folder is empty initially but is there to hold the generated documents for the project.

Default Project Code
--------------------
In order to avoid manually creating the above directory structure as well as including the various requirements every time a new project is started the a default project is created on github: http://github.com/punteney/default_project

The default project follows the directory structure outlined above, but also includes additional items such as required modules, default settings, and helper code. 

Requirement Files
^^^^^^^^^^^^^^^^^^^^^^
There are two requirements files in the deploy folder. These are `pip requirements files <http://pip.openplans.org/#requirements-files>`_ containing the required modules.

* requirements_all.txt - This file holds the required python modules that should be installed on all systems that this project is installed on (dev, staging, production). It contains the following items:
    * `Django <http://www.djangoproject.com/>`_ - The lastest released version of Django
    * `ipython <http://ipython.scipy.org/moin/>`_ - An enhanced interactive python shell
    * `python-memcached <http://pypi.python.org/pypi/python-memcached>`_ - A fully python memcache client
    * `south <http://south.aeracode.org/>`_ - Database migrations for django.
    
* requirements_dev.txt - This file is for requirements only needed on the dev server. Most of the items in this file are items to make debugging and testing easier which aren't needed on the production servers.
    * `psycopg2 <http://initd.org/psycopg/>`_ - A database drive for PostGreSQL  sqllite or another database is used for local development delete this item.
    * `django-debug-toolbar <http://github.com/robhudson/django-debug-toolbar>`_ - A huge help for debugging and optimizing.
    * `werkseug <http://pypi.python.org/pypi/Werkzeug/>`_ - A debugger that that supports interactive debugging on the error pages.
    * `django-extensions <http://pypi.python.org/pypi/django-extensions/>`_ - Various helpful command extensions to django.
    * `fabric <http://fabfile.org>`_ - Framework for deploying out to servers

Config Files
^^^^^^^^^^^^^^^^^^^^^^^^
ToDo refactor the config files to use fabric templates and describe here







